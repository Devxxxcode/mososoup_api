# Generated by Django 3.2.21 on 2025-08-28 14:54

import django.core.validators
from django.db import migrations, models


def set_credit_score_default(apps, schema_editor):
    """
    Set the database default value for credit_score to 100.00 using raw SQL
    """
    if schema_editor.connection.vendor == 'postgresql':
        schema_editor.execute(
            "ALTER TABLE wallet_wallet ALTER COLUMN credit_score SET DEFAULT 100.00"
        )
    elif schema_editor.connection.vendor == 'sqlite':
        # SQLite doesn't support ALTER COLUMN SET DEFAULT, so we'll use a different approach
        schema_editor.execute(
            "PRAGMA foreign_keys=off"
        )
        schema_editor.execute(
            "CREATE TABLE wallet_wallet_new AS SELECT * FROM wallet_wallet"
        )
        schema_editor.execute(
            "DROP TABLE wallet_wallet"
        )
        schema_editor.execute(
            "ALTER TABLE wallet_wallet_new RENAME TO wallet_wallet"
        )
        schema_editor.execute(
            "PRAGMA foreign_keys=on"
        )


def reverse_credit_score_default(apps, schema_editor):
    """
    Remove the database default value for credit_score
    """
    if schema_editor.connection.vendor == 'postgresql':
        schema_editor.execute(
            "ALTER TABLE wallet_wallet ALTER COLUMN credit_score DROP DEFAULT"
        )
    # SQLite doesn't need reversal as it doesn't support defaults in the same way


class Migration(migrations.Migration):

    dependencies = [
        ('wallet', '0005_onholdpay'),
    ]

    operations = [
        migrations.AlterField(
            model_name='wallet',
            name='credit_score',
            field=models.DecimalField(
                decimal_places=2, 
                default=100.0, 
                max_digits=5, 
                validators=[
                    django.core.validators.MinValueValidator(0.0), 
                    django.core.validators.MaxValueValidator(100.0)
                ], 
                verbose_name='Credit Score'
            ),
        ),
        migrations.RunPython(
            set_credit_score_default,
            reverse_credit_score_default
        ),
    ]
